package com.bear.web.site;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.bear.dto.QueryCarBySiteReq;
import com.bear.dto.QueryCarBySiteRsp;
import com.bear.dto.QuerySiteInfoReq;
import com.bear.dto.QuerySiteInfoRsp;
import com.bear.dto.ReturnVo;
import com.bear.exception.HandelException;
import com.bear.service.site.ISiteService;
import com.bear.utils.JsonUtil;
import com.bear.utils.ParametersCheckUtil;
import com.bear.web.BaseController;

@RestController
@RequestMapping({"/site"})
public class SiteController<GetFaultTypesReq> extends BaseController{
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	private ISiteService siteService;	
	
	@RequestMapping(value={"/querySiteInfo"}, method={RequestMethod.POST}, produces={"application/json;charset=UTF-8"})
	@ResponseBody
	public ReturnVo<QuerySiteInfoRsp> querySiteInfo(@RequestBody String body, HttpServletRequest request)
	{
		logger.info("querySiteInfo request param：" + body);
		//把body转换成对象
		QuerySiteInfoReq req = JsonUtil.getObject(QuerySiteInfoReq.class,body);
		if (null == req) {
			throw new HandelException("Json消息非法", -8888);
		}
		ParametersCheckUtil.checkParams(req.getSiteId(), "siteId");
		ReturnVo<QuerySiteInfoRsp> vo;
		try {
			QuerySiteInfoRsp rsp = siteService.querySiteInfo(req);
			vo = new ReturnVo("10000","success",rsp.getSite());
		} catch (HandelException e) {
			logger.error(e.getMessage(), e);
			vo = new ReturnVo<QuerySiteInfoRsp>(e.getCode().toString(), e.getMessage());
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			vo = new ReturnVo<QuerySiteInfoRsp>("-9999", e.getMessage());
		}
		return vo;
	}
	
	/**
	 * 查询当前站点可用车辆
	 * @param body
	 * @param request
	 * @return
	 */
	@RequestMapping(value={"/queryCarBySite"}, method={RequestMethod.POST}, produces={"application/json;charset=UTF-8"})
	@ResponseBody
	public ReturnVo<QueryCarBySiteRsp> queryCarBySite(@RequestBody String body, HttpServletRequest request)
	{
		logger.info("queryCarBySiteId request param：" + body);
		//把body转换成对象
		QueryCarBySiteReq req = JsonUtil.getObject(QueryCarBySiteReq.class,body);
		if (null == req) {
			throw new HandelException("Json消息非法", -8888);
		}
		ParametersCheckUtil.checkParams(req.getSiteId(), "siteId");
		ReturnVo<QueryCarBySiteRsp> vo;
		try {
			QueryCarBySiteRsp rsp = siteService.queryCarBySite(req);
			vo = new ReturnVo("10000","success",rsp.getCarStocks());
		} catch (HandelException e) {
			logger.error(e.getMessage(), e);
			vo = new ReturnVo<QueryCarBySiteRsp>(e.getCode().toString(), e.getMessage());
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			vo = new ReturnVo<QueryCarBySiteRsp>("-9999", e.getMessage());
		}
		return vo;
	}
	
	
}
